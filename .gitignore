# ng new dynamic-dashboard --routing --style=scss
cd dynamic-dashboard
ng add @angular/material
npm install @ngrx/store @ngrx/effects @ngrx/store-devtools
ng generate component header
ng generate component user-list
ng generate component user-details
<mat-toolbar>
  <span>User Dashboard</span>
  <input matInput [(ngModel)]="searchQuery" (input)="onSearchChange()" placeholder="Search by ID">
</mat-toolbar>
searchQuery: string = '';

onSearchChange() {
  this.userService.getUsers(1).subscribe(data => {
    this.filteredUsers = data.data.filter(user => user.id.toString().includes(this.searchQuery));
  });
}
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class UserService {
  constructor(private http: HttpClient) {}

  getUsers(page: number): Observable<any> {
    return this.http.get(https://reqres.in/api/users?page=${page});
  }

  getUserDetails(id: number): Observable<any> {
    return this.http.get(https://reqres.in/api/users/${id});
  }
}import { Component, OnInit } from '@angular/core';
import { UserService } from '../user.service';

@Component({
  selector: 'app-user-list',
  templateUrl: './user-list.component.html',
  styleUrls: ['./user-list.component.scss']
})
export class UserListComponent implements OnInit {
  users: any[] = [];
  loading = false;

  constructor(private userService: UserService) {}

  ngOnInit() {
    this.loading = true;
    this.userService.getUsers(1).subscribe((data: any) => {
      this.users = data.data;
      this.loading = false;
    });
  }
}
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { UserListComponent } from './user-list/user-list.component';
import { UserDetailsComponent } from './user-details/user-details.component';

const routes: Routes = [
  { path: '', component: UserListComponent },
  { path: 'user/:id', component: UserDetailsComponent }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule {}
<div class="user-card" *ngFor="let user of users" (click)="goToUserDetails(user.id)">
  <img [src]="user.avatar" alt="User Avatar">
  <h2>{{ user.first_name }} {{ user.last_name }}</h2>
</div>
import { Router } from '@angular/router';

constructor(private router: Router) {}

goToUserDetails(id: number): void {
  this.router.navigate([/user/${id}]);
}
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { UserService } from '../user.service';

@Component({
  selector: 'app-user-details',
  templateUrl: './user-details.component.html',
  styleUrls: ['./user-details.component.scss']
})
export class UserDetailsComponent implements OnInit {
  user: any;

  constructor(private route: ActivatedRoute, private userService: UserService) {}

  ngOnInit() {
    const id = +this.route.snapshot.paramMap.get('id')!;
    this.userService.getUserDetails(id).subscribe(data => {
      this.user = data;
    });
  }

  goBack() {
    window.history.back();
  }
}
<button (click)="goBack()">Back</button>
<div *ngIf="user">
  <img [src]="user.avatar" alt="User Avatar">
  <h2>{{ user.first_name }} {{ user.last_name }}</h2>
  <p>Email: {{ user.email }}</p>
</div>
getUsers(page: number): Observable<any> {
  const cachedData = localStorage.getItem(users-page-${page});
  if (cachedData) {
    return of(JSON.parse(cachedData));
  } else {
    return this.http.get(https://reqres.in/api/users?page=${page}).pipe(
      tap(data => localStorage.setItem(users-page-${page}, JSON.stringify(data)))
    );
  }
}
<mat-spinner *ngIf="loading" mode="indeterminate"></mat-spinner>
loading = true;
this.userService.getUsers(1).subscribe(data => {
  this.users = data.data;
  this.loading = false;
});